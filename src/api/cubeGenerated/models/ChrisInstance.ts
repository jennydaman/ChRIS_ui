/* tslint:disable */
/* eslint-disable */
/**
 * ChRIS Research Integration System: Ultron BackEnd (CUBE) API
 * The ChRIS Ultron BackEnd (CUBE) is the core backend API of ChRIS. It manages ChRIS users, plugins, pipelines, and the provenance of data analyses as ChRIS feeds.
 *
 * The version of the OpenAPI document: 0.0.0+unknown
 * Contact: dev@babymri.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChrisInstance
 */
export interface ChrisInstance {
    /**
     * 
     * @type {string}
     * @memberof ChrisInstance
     */
    readonly url: string;
    /**
     * 
     * @type {number}
     * @memberof ChrisInstance
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof ChrisInstance
     */
    readonly creationDate: Date;
    /**
     * 
     * @type {string}
     * @memberof ChrisInstance
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ChrisInstance
     */
    uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof ChrisInstance
     */
    jobIdPrefix?: string;
    /**
     * 
     * @type {string}
     * @memberof ChrisInstance
     */
    description?: string;
}

/**
 * Check if a given object implements the ChrisInstance interface.
 */
export function instanceOfChrisInstance(value: object): value is ChrisInstance {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('creationDate' in value) || value['creationDate'] === undefined) return false;
    return true;
}

export function ChrisInstanceFromJSON(json: any): ChrisInstance {
    return ChrisInstanceFromJSONTyped(json, false);
}

export function ChrisInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChrisInstance {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'id': json['id'],
        'creationDate': (new Date(json['creation_date'])),
        'name': json['name'] == null ? undefined : json['name'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'jobIdPrefix': json['job_id_prefix'] == null ? undefined : json['job_id_prefix'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function ChrisInstanceToJSON(value?: Omit<ChrisInstance, 'url'|'id'|'creation_date'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'uuid': value['uuid'],
        'job_id_prefix': value['jobIdPrefix'],
        'description': value['description'],
    };
}

