/* tslint:disable */
/* eslint-disable */
/**
 * ChRIS Research Integration System: Ultron BackEnd (CUBE) API
 * The ChRIS Ultron BackEnd (CUBE) is the core backend API of ChRIS. It manages ChRIS users, plugins, pipelines, and the provenance of data analyses as ChRIS feeds.
 *
 * The version of the OpenAPI document: 0.0.0+unknown
 * Contact: dev@babymri.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Tagging } from './Tagging';
import {
    TaggingFromJSON,
    TaggingFromJSONTyped,
    TaggingToJSON,
} from './Tagging';

/**
 * 
 * @export
 * @interface PaginatedTaggingList
 */
export interface PaginatedTaggingList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedTaggingList
     */
    count?: number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedTaggingList
     */
    next?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedTaggingList
     */
    previous?: string | null;
    /**
     * 
     * @type {Array<Tagging>}
     * @memberof PaginatedTaggingList
     */
    results?: Array<Tagging>;
}

/**
 * Check if a given object implements the PaginatedTaggingList interface.
 */
export function instanceOfPaginatedTaggingList(value: object): value is PaginatedTaggingList {
    return true;
}

export function PaginatedTaggingListFromJSON(json: any): PaginatedTaggingList {
    return PaginatedTaggingListFromJSONTyped(json, false);
}

export function PaginatedTaggingListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedTaggingList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'next': json['next'] == null ? undefined : json['next'],
        'previous': json['previous'] == null ? undefined : json['previous'],
        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(TaggingFromJSON)),
    };
}

export function PaginatedTaggingListToJSON(value?: PaginatedTaggingList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'next': value['next'],
        'previous': value['previous'],
        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(TaggingToJSON)),
    };
}

