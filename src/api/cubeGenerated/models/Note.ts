/* tslint:disable */
/* eslint-disable */
/**
 * ChRIS Research Integration System: Ultron BackEnd (CUBE) API
 * The ChRIS Ultron BackEnd (CUBE) is the core backend API of ChRIS. It manages ChRIS users, plugins, pipelines, and the provenance of data analyses as ChRIS feeds.
 *
 * The version of the OpenAPI document: 0.0.0+unknown
 * Contact: dev@babymri.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Note
 */
export interface Note {
    /**
     * 
     * @type {string}
     * @memberof Note
     */
    readonly url: string;
    /**
     * 
     * @type {number}
     * @memberof Note
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Note
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Note
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof Note
     */
    readonly feed: string;
}

/**
 * Check if a given object implements the Note interface.
 */
export function instanceOfNote(value: object): value is Note {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('feed' in value) || value['feed'] === undefined) return false;
    return true;
}

export function NoteFromJSON(json: any): Note {
    return NoteFromJSONTyped(json, false);
}

export function NoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Note {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'id': json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'content': json['content'] == null ? undefined : json['content'],
        'feed': json['feed'],
    };
}

export function NoteToJSON(value?: Omit<Note, 'url'|'id'|'feed'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'content': value['content'],
    };
}

