/* tslint:disable */
/* eslint-disable */
/**
 * ChRIS Research Integration System: Ultron BackEnd (CUBE) API
 * The ChRIS Ultron BackEnd (CUBE) is the core backend API of ChRIS. It manages ChRIS users, plugins, pipelines, and the provenance of data analyses as ChRIS feeds.
 *
 * The version of the OpenAPI document: 0.0.0+unknown
 * Contact: dev@babymri.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComputeResource
 */
export interface ComputeResource {
    /**
     * 
     * @type {string}
     * @memberof ComputeResource
     */
    readonly url: string;
    /**
     * 
     * @type {number}
     * @memberof ComputeResource
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof ComputeResource
     */
    readonly creationDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof ComputeResource
     */
    readonly modificationDate: Date;
    /**
     * 
     * @type {string}
     * @memberof ComputeResource
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ComputeResource
     */
    computeUrl: string;
    /**
     * 
     * @type {string}
     * @memberof ComputeResource
     */
    computeAuthUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ComputeResource
     */
    computeInnetwork?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ComputeResource
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof ComputeResource
     */
    maxJobExecSeconds?: number;
}

/**
 * Check if a given object implements the ComputeResource interface.
 */
export function instanceOfComputeResource(value: object): value is ComputeResource {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('creationDate' in value) || value['creationDate'] === undefined) return false;
    if (!('modificationDate' in value) || value['modificationDate'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('computeUrl' in value) || value['computeUrl'] === undefined) return false;
    return true;
}

export function ComputeResourceFromJSON(json: any): ComputeResource {
    return ComputeResourceFromJSONTyped(json, false);
}

export function ComputeResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComputeResource {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'id': json['id'],
        'creationDate': (new Date(json['creation_date'])),
        'modificationDate': (new Date(json['modification_date'])),
        'name': json['name'],
        'computeUrl': json['compute_url'],
        'computeAuthUrl': json['compute_auth_url'] == null ? undefined : json['compute_auth_url'],
        'computeInnetwork': json['compute_innetwork'] == null ? undefined : json['compute_innetwork'],
        'description': json['description'] == null ? undefined : json['description'],
        'maxJobExecSeconds': json['max_job_exec_seconds'] == null ? undefined : json['max_job_exec_seconds'],
    };
}

export function ComputeResourceToJSON(value?: Omit<ComputeResource, 'url'|'id'|'creation_date'|'modification_date'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'compute_url': value['computeUrl'],
        'compute_auth_url': value['computeAuthUrl'],
        'compute_innetwork': value['computeInnetwork'],
        'description': value['description'],
        'max_job_exec_seconds': value['maxJobExecSeconds'],
    };
}

