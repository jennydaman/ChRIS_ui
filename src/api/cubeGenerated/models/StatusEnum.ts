/* tslint:disable */
/* eslint-disable */
/**
 * ChRIS Research Integration System: Ultron BackEnd (CUBE) API
 * The ChRIS Ultron BackEnd (CUBE) is the core backend API of ChRIS. It manages ChRIS users, plugins, pipelines, and the provenance of data analyses as ChRIS feeds.
 *
 * The version of the OpenAPI document: 0.0.0+unknown
 * Contact: dev@babymri.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * * `created` - Default initial
 * * `waiting` - Waiting to be scheduled
 * * `scheduled` - Scheduled on worker
 * * `started` - Started on compute env
 * * `registeringFiles` - Registering output files
 * * `finishedSuccessfully` - Finished successfully
 * * `finishedWithError` - Finished with error
 * * `cancelled` - Cancelled
 * @export
 */
export const StatusEnum = {
    Created: 'created',
    Waiting: 'waiting',
    Scheduled: 'scheduled',
    Started: 'started',
    RegisteringFiles: 'registeringFiles',
    FinishedSuccessfully: 'finishedSuccessfully',
    FinishedWithError: 'finishedWithError',
    Cancelled: 'cancelled'
} as const;
export type StatusEnum = typeof StatusEnum[keyof typeof StatusEnum];


export function instanceOfStatusEnum(value: any): boolean {
    for (const key in StatusEnum) {
        if (Object.prototype.hasOwnProperty.call(StatusEnum, key)) {
            if (StatusEnum[key as keyof typeof StatusEnum] === value) {
                return true;
            }
        }
    }
    return false;
}

export function StatusEnumFromJSON(json: any): StatusEnum {
    return StatusEnumFromJSONTyped(json, false);
}

export function StatusEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatusEnum {
    return json as StatusEnum;
}

export function StatusEnumToJSON(value?: StatusEnum | null): any {
    return value as any;
}

