/* tslint:disable */
/* eslint-disable */
/**
 * ChRIS Research Integration System: Ultron BackEnd (CUBE) API
 * The ChRIS Ultron BackEnd (CUBE) is the core backend API of ChRIS. It manages ChRIS users, plugins, pipelines, and the provenance of data analyses as ChRIS feeds.
 *
 * The version of the OpenAPI document: 0.0.0+unknown
 * Contact: dev@babymri.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A Plugin serializer for the PluginAdminList JSON view.
 * @export
 * @interface PluginAdminRequest
 */
export interface PluginAdminRequest {
    /**
     * 
     * @type {string}
     * @memberof PluginAdminRequest
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof PluginAdminRequest
     */
    dockImage?: string;
    /**
     * 
     * @type {string}
     * @memberof PluginAdminRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof PluginAdminRequest
     */
    execshell?: string;
    /**
     * 
     * @type {string}
     * @memberof PluginAdminRequest
     */
    selfpath?: string;
    /**
     * 
     * @type {string}
     * @memberof PluginAdminRequest
     */
    selfexec?: string;
    /**
     * 
     * @type {number}
     * @memberof PluginAdminRequest
     */
    minNumberOfWorkers?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginAdminRequest
     */
    maxNumberOfWorkers?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginAdminRequest
     */
    minCpuLimit?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginAdminRequest
     */
    maxCpuLimit?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginAdminRequest
     */
    minMemoryLimit?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginAdminRequest
     */
    maxMemoryLimit?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginAdminRequest
     */
    minGpuLimit?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginAdminRequest
     */
    maxGpuLimit?: number | null;
    /**
     * 
     * @type {Blob}
     * @memberof PluginAdminRequest
     */
    fname?: Blob;
    /**
     * 
     * @type {string}
     * @memberof PluginAdminRequest
     */
    pluginStoreUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof PluginAdminRequest
     */
    computeNames: string;
}

/**
 * Check if a given object implements the PluginAdminRequest interface.
 */
export function instanceOfPluginAdminRequest(value: object): value is PluginAdminRequest {
    if (!('computeNames' in value) || value['computeNames'] === undefined) return false;
    return true;
}

export function PluginAdminRequestFromJSON(json: any): PluginAdminRequest {
    return PluginAdminRequestFromJSONTyped(json, false);
}

export function PluginAdminRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginAdminRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'] == null ? undefined : json['version'],
        'dockImage': json['dock_image'] == null ? undefined : json['dock_image'],
        'description': json['description'] == null ? undefined : json['description'],
        'execshell': json['execshell'] == null ? undefined : json['execshell'],
        'selfpath': json['selfpath'] == null ? undefined : json['selfpath'],
        'selfexec': json['selfexec'] == null ? undefined : json['selfexec'],
        'minNumberOfWorkers': json['min_number_of_workers'] == null ? undefined : json['min_number_of_workers'],
        'maxNumberOfWorkers': json['max_number_of_workers'] == null ? undefined : json['max_number_of_workers'],
        'minCpuLimit': json['min_cpu_limit'] == null ? undefined : json['min_cpu_limit'],
        'maxCpuLimit': json['max_cpu_limit'] == null ? undefined : json['max_cpu_limit'],
        'minMemoryLimit': json['min_memory_limit'] == null ? undefined : json['min_memory_limit'],
        'maxMemoryLimit': json['max_memory_limit'] == null ? undefined : json['max_memory_limit'],
        'minGpuLimit': json['min_gpu_limit'] == null ? undefined : json['min_gpu_limit'],
        'maxGpuLimit': json['max_gpu_limit'] == null ? undefined : json['max_gpu_limit'],
        'fname': json['fname'] == null ? undefined : json['fname'],
        'pluginStoreUrl': json['plugin_store_url'] == null ? undefined : json['plugin_store_url'],
        'computeNames': json['compute_names'],
    };
}

export function PluginAdminRequestToJSON(value?: PluginAdminRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'version': value['version'],
        'dock_image': value['dockImage'],
        'description': value['description'],
        'execshell': value['execshell'],
        'selfpath': value['selfpath'],
        'selfexec': value['selfexec'],
        'min_number_of_workers': value['minNumberOfWorkers'],
        'max_number_of_workers': value['maxNumberOfWorkers'],
        'min_cpu_limit': value['minCpuLimit'],
        'max_cpu_limit': value['maxCpuLimit'],
        'min_memory_limit': value['minMemoryLimit'],
        'max_memory_limit': value['maxMemoryLimit'],
        'min_gpu_limit': value['minGpuLimit'],
        'max_gpu_limit': value['maxGpuLimit'],
        'fname': value['fname'],
        'plugin_store_url': value['pluginStoreUrl'],
        'compute_names': value['computeNames'],
    };
}

