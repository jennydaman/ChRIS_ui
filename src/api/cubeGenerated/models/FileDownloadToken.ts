/* tslint:disable */
/* eslint-disable */
/**
 * ChRIS Research Integration System: Ultron BackEnd (CUBE) API
 * The ChRIS Ultron BackEnd (CUBE) is the core backend API of ChRIS. It manages ChRIS users, plugins, pipelines, and the provenance of data analyses as ChRIS feeds.
 *
 * The version of the OpenAPI document: 0.0.0+unknown
 * Contact: dev@babymri.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileDownloadToken
 */
export interface FileDownloadToken {
    /**
     * 
     * @type {string}
     * @memberof FileDownloadToken
     */
    readonly url: string;
    /**
     * 
     * @type {number}
     * @memberof FileDownloadToken
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof FileDownloadToken
     */
    readonly creationDate: Date;
    /**
     * 
     * @type {string}
     * @memberof FileDownloadToken
     */
    token?: string;
    /**
     * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
     * @type {string}
     * @memberof FileDownloadToken
     */
    readonly ownerUsername: string;
    /**
     * 
     * @type {string}
     * @memberof FileDownloadToken
     */
    readonly owner: string;
}

/**
 * Check if a given object implements the FileDownloadToken interface.
 */
export function instanceOfFileDownloadToken(value: object): value is FileDownloadToken {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('creationDate' in value) || value['creationDate'] === undefined) return false;
    if (!('ownerUsername' in value) || value['ownerUsername'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    return true;
}

export function FileDownloadTokenFromJSON(json: any): FileDownloadToken {
    return FileDownloadTokenFromJSONTyped(json, false);
}

export function FileDownloadTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileDownloadToken {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'id': json['id'],
        'creationDate': (new Date(json['creation_date'])),
        'token': json['token'] == null ? undefined : json['token'],
        'ownerUsername': json['owner_username'],
        'owner': json['owner'],
    };
}

export function FileDownloadTokenToJSON(value?: Omit<FileDownloadToken, 'url'|'id'|'creation_date'|'owner_username'|'owner'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'token': value['token'],
    };
}

