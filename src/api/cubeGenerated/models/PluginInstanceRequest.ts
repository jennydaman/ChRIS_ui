/* tslint:disable */
/* eslint-disable */
/**
 * ChRIS Research Integration System: Ultron BackEnd (CUBE) API
 * The ChRIS Ultron BackEnd (CUBE) is the core backend API of ChRIS. It manages ChRIS users, plugins, pipelines, and the provenance of data analyses as ChRIS feeds.
 *
 * The version of the OpenAPI document: 0.0.0+unknown
 * Contact: dev@babymri.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusEnum } from './StatusEnum';
import {
    StatusEnumFromJSON,
    StatusEnumFromJSONTyped,
    StatusEnumToJSON,
} from './StatusEnum';

/**
 * 
 * @export
 * @interface PluginInstanceRequest
 */
export interface PluginInstanceRequest {
    /**
     * 
     * @type {string}
     * @memberof PluginInstanceRequest
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PluginInstanceRequest
     */
    computeResourceName?: string;
    /**
     * 
     * @type {StatusEnum}
     * @memberof PluginInstanceRequest
     */
    status?: StatusEnum;
    /**
     * 
     * @type {number}
     * @memberof PluginInstanceRequest
     */
    cpuLimit?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginInstanceRequest
     */
    memoryLimit?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginInstanceRequest
     */
    numberOfWorkers?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PluginInstanceRequest
     */
    gpuLimit?: number | null;
}



/**
 * Check if a given object implements the PluginInstanceRequest interface.
 */
export function instanceOfPluginInstanceRequest(value: object): value is PluginInstanceRequest {
    return true;
}

export function PluginInstanceRequestFromJSON(json: any): PluginInstanceRequest {
    return PluginInstanceRequestFromJSONTyped(json, false);
}

export function PluginInstanceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginInstanceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : json['title'],
        'computeResourceName': json['compute_resource_name'] == null ? undefined : json['compute_resource_name'],
        'status': json['status'] == null ? undefined : StatusEnumFromJSON(json['status']),
        'cpuLimit': json['cpu_limit'] == null ? undefined : json['cpu_limit'],
        'memoryLimit': json['memory_limit'] == null ? undefined : json['memory_limit'],
        'numberOfWorkers': json['number_of_workers'] == null ? undefined : json['number_of_workers'],
        'gpuLimit': json['gpu_limit'] == null ? undefined : json['gpu_limit'],
    };
}

export function PluginInstanceRequestToJSON(value?: PluginInstanceRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'compute_resource_name': value['computeResourceName'],
        'status': StatusEnumToJSON(value['status']),
        'cpu_limit': value['cpuLimit'],
        'memory_limit': value['memoryLimit'],
        'number_of_workers': value['numberOfWorkers'],
        'gpu_limit': value['gpuLimit'],
    };
}

